{
    "openapi": "3.0.3",
    "info": {
      "title": "Kit API",
      "version": "4.0"
    },
    "servers": [
      {
        "url": "https://api.kit.com"
      }
    ],
    "paths": {
      "/v4/account": {
        "get": {
          "summary": "Get current account",
          "tags": [
            "Accounts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns current account and user info",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "email"
                        ]
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "plan_type": {
                            "type": "string"
                          },
                          "primary_email_address": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "timezone": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "friendly_name": {
                                "type": "string"
                              },
                              "utc_offset": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "friendly_name",
                              "utc_offset"
                            ]
                          }
                        },
                        "required": [
                          "name",
                          "plan_type",
                          "primary_email_address"
                        ]
                      }
                    },
                    "required": [
                      "user",
                      "account"
                    ]
                  },
                  "example": {
                    "user": {
                      "email": "test@convertkit.dev"
                    },
                    "account": {
                      "name": "Kit Greetings",
                      "plan_type": "creator",
                      "primary_email_address": "test@convertkit.dev",
                      "created_at": "2023-02-17T11:43:55Z",
                      "id": 26,
                      "timezone": {
                        "name": "America/New_York",
                        "friendly_name": "Eastern Time (US & Canada)",
                        "utc_offset": "-05:00"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/account/colors": {
        "get": {
          "summary": "List colors",
          "tags": [
            "Accounts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns list of colors for the current account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "colors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "colors"
                    ]
                  },
                  "example": {
                    "colors": [
                      "#008000",
                      "#FF0000"
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update colors",
          "tags": [
            "Accounts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "colors": {
                      "type": "array",
                      "description": "An array of up to 5 color hex codes",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "colors"
                  ]
                },
                "example": {
                  "colors": [
                    "#000000",
                    "#ffffff"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updates and returns list of colors for the current account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "colors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "colors"
                    ]
                  },
                  "example": {
                    "colors": [
                      "#000000",
                      "#ffffff"
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when invalid color code is provided",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Colors #123_not_a_code is not a valid hex color code."
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/account/creator_profile": {
        "get": {
          "summary": "Get Creator Profile",
          "tags": [
            "Accounts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns Creator Profile details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "profile": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "byline": {
                            "type": "string"
                          },
                          "bio": {
                            "type": "string"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "profile_url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "byline",
                          "bio",
                          "image_url",
                          "profile_url"
                        ]
                      }
                    },
                    "required": [
                      "profile"
                    ]
                  },
                  "example": {
                    "profile": {
                      "name": "A Creator's Journey",
                      "byline": "A Creator",
                      "bio": "Follow my Journey as a Creator",
                      "image_url": "https://convertkit.dev/image.jpg?fit=crop&h=320&w=320",
                      "profile_url": "https://kit-greetings.ck.page/profile"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 if the creator profile doesn't exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/account/email_stats": {
        "get": {
          "summary": "Get email stats",
          "tags": [
            "Accounts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns your email stats for the last 90 days",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "stats": {
                        "type": "object",
                        "properties": {
                          "sent": {
                            "type": "integer"
                          },
                          "clicked": {
                            "type": "integer"
                          },
                          "opened": {
                            "type": "integer"
                          },
                          "email_stats_mode": {
                            "type": "string"
                          },
                          "open_tracking_enabled": {
                            "type": "boolean"
                          },
                          "click_tracking_enabled": {
                            "type": "boolean"
                          },
                          "starting": {
                            "type": "string"
                          },
                          "ending": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "sent",
                          "clicked",
                          "opened",
                          "email_stats_mode",
                          "open_tracking_enabled",
                          "click_tracking_enabled",
                          "starting",
                          "ending"
                        ]
                      }
                    },
                    "required": [
                      "stats"
                    ]
                  },
                  "example": {
                    "stats": {
                      "sent": 6,
                      "clicked": 3,
                      "opened": 6,
                      "email_stats_mode": "last_90",
                      "open_tracking_enabled": true,
                      "click_tracking_enabled": true,
                      "starting": "2022-11-19T11:43:55Z",
                      "ending": "2023-02-17T11:43:55Z"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/account/growth_stats": {
        "get": {
          "summary": "Get growth stats",
          "description": "Get growth stats for a specific time period. Defaults to last 90 days.<br/><br/>NOTE: We return your stats in your sending time zone. This endpoint does not return timestamps in UTC.",
          "tags": [
            "Accounts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "ending",
              "in": "query",
              "description": "Get stats for time period ending on this date (format yyyy-mm-dd). Defaults to today.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "02/09/2023"
            },
            {
              "name": "starting",
              "in": "query",
              "description": "Get stats for time period beginning on this date (format yyyy-mm-dd). Defaults to 90 days ago.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "02/10/2023"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns your growth stats for the provided starting and ending dates",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "stats": {
                        "type": "object",
                        "properties": {
                          "cancellations": {
                            "type": "integer"
                          },
                          "net_new_subscribers": {
                            "type": "integer"
                          },
                          "new_subscribers": {
                            "type": "integer"
                          },
                          "subscribers": {
                            "type": "integer"
                          },
                          "starting": {
                            "type": "string"
                          },
                          "ending": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "cancellations",
                          "net_new_subscribers",
                          "new_subscribers",
                          "subscribers",
                          "starting",
                          "ending"
                        ]
                      }
                    },
                    "required": [
                      "stats"
                    ]
                  },
                  "example": {
                    "stats": {
                      "cancellations": 0,
                      "net_new_subscribers": 3,
                      "new_subscribers": 3,
                      "subscribers": 3,
                      "starting": "2023-02-10T00:00:00-05:00",
                      "ending": "2023-02-24T23:59:59-05:00"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message if the starting or ending params are misformatted or the range is invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Starting date is incorrectly formatted. Use YYYY-MM-DD.",
                      "Ending date is incorrectly formatted. Use YYYY-MM-DD.",
                      "Starting date must be before the ending date."
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/broadcasts": {
        "get": {
          "summary": "List broadcasts",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all broadcasts for your account (including draft, scheduled, and already sent)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "broadcasts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "description": {
                              "nullable": true
                            },
                            "content": {
                              "nullable": true
                            },
                            "public": {
                              "type": "boolean"
                            },
                            "published_at": {
                              "nullable": true
                            },
                            "send_at": {
                              "nullable": true
                            },
                            "thumbnail_alt": {
                              "nullable": true
                            },
                            "thumbnail_url": {
                              "nullable": true
                            },
                            "email_address": {
                              "nullable": true
                            },
                            "preview_text": {
                              "nullable": true
                            },
                            "email_template": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            },
                            "subscriber_filter": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "ids": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ]
                                    }
                                  },
                                  "any": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "ids": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "ids"
                                      ]
                                    }
                                  },
                                  "none": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "ids": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "ids"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "all"
                                ]
                              }
                            },
                            "publication_id": {
                              "type": "integer"
                            },
                            "clicks": {
                              "type": "array",
                              "items": {}
                            },
                            "stats": {
                              "type": "object",
                              "properties": {
                                "recipients": {
                                  "type": "integer"
                                },
                                "open_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "emails_opened": {
                                  "type": "integer"
                                },
                                "click_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "unsubscribe_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "unsubscribes": {
                                  "type": "integer"
                                },
                                "total_clicks": {
                                  "type": "integer"
                                },
                                "show_total_clicks": {
                                  "type": "boolean"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "progress": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "open_tracking_disabled": {
                                  "type": "boolean"
                                },
                                "click_tracking_disabled": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "recipients",
                                "open_rate",
                                "emails_opened",
                                "click_rate",
                                "unsubscribe_rate",
                                "unsubscribes",
                                "total_clicks",
                                "show_total_clicks",
                                "status",
                                "progress",
                                "open_tracking_disabled",
                                "click_tracking_disabled"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "subject",
                            "description",
                            "content",
                            "public",
                            "published_at",
                            "send_at",
                            "thumbnail_alt",
                            "thumbnail_url",
                            "email_address",
                            "email_template",
                            "subscriber_filter"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "nullable": true,
                            "type": "string"
                          },
                          "end_cursor": {
                            "nullable": true,
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "broadcasts",
                      "pagination"
                    ]
                  },
                  "example": {
                    "broadcasts": [
                      {
                        "id": 3,
                        "publication_id": 3,
                        "created_at": "2023-02-17T11:43:55Z",
                        "subject": "Campaign subject 3",
                        "preview_text": null,
                        "description": null,
                        "content": null,
                        "public": false,
                        "published_at": null,
                        "send_at": null,
                        "thumbnail_alt": null,
                        "thumbnail_url": null,
                        "email_address": null,
                        "email_template": {
                          "id": 6,
                          "name": "Text Only"
                        },
                        "subscriber_filter": [
                          {
                            "all": [
                              {
                                "type": "all_subscribers"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "id": 2,
                        "publication_id": 2,
                        "created_at": "2023-02-17T11:43:55Z",
                        "subject": "Campaign subject 2",
                        "preview_text": null,
                        "description": null,
                        "content": null,
                        "public": false,
                        "published_at": null,
                        "send_at": null,
                        "thumbnail_alt": null,
                        "thumbnail_url": null,
                        "email_address": null,
                        "email_template": {
                          "id": 6,
                          "name": "Text Only"
                        },
                        "subscriber_filter": [
                          {
                            "all": [
                              {
                                "type": "all_subscribers"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "id": 1,
                        "publication_id": 1,
                        "created_at": "2023-02-17T11:43:55Z",
                        "subject": "Campaign subject 1",
                        "preview_text": null,
                        "description": null,
                        "content": null,
                        "public": false,
                        "published_at": null,
                        "send_at": null,
                        "thumbnail_alt": null,
                        "thumbnail_url": null,
                        "email_address": null,
                        "email_template": {
                          "id": 6,
                          "name": "Text Only"
                        },
                        "subscriber_filter": [
                          {
                            "all": [
                              {
                                "type": "all_subscribers"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzNd",
                      "end_cursor": "WzFd",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a broadcast",
          "description": "Draft or schedule to send a broadcast to all or a subset of your subscribers.<br/><br/>To save a draft, set `send_at` to `null`.<br/><br/>To publish to the web, set `public` to `true`.<br/><br/>To schedule the broadcast for sending, provide a `send_at` timestamp. Scheduled broadcasts should contain a subject and your content, at a minimum.<br/><br/>We currently support targeting your subscribers based on segment or tag ids.<aside class='notice'>Starting point templates are not currently supported.</aside>",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email_template_id": {
                      "nullable": true,
                      "type": "integer",
                      "description": "Id of the email template to use. Uses the account's default template if not provided. 'Starting point' template is not supported."
                    },
                    "email_address": {
                      "nullable": true,
                      "type": "string",
                      "description": "The sending email address to use. Uses the account's sending email address if not provided."
                    },
                    "content": {
                      "nullable": true,
                      "type": "string",
                      "description": "The HTML content of the email."
                    },
                    "description": {
                      "nullable": true,
                      "type": "string"
                    },
                    "public": {
                      "nullable": true,
                      "type": "boolean",
                      "description": "`true` to publish this broadcast to the web. The broadcast will appear in a newsletter feed on your Creator Profile and Landing Pages."
                    },
                    "published_at": {
                      "nullable": true,
                      "type": "string",
                      "description": "The published timestamp to display in ISO8601 format. If no timezone is provided, UTC is assumed."
                    },
                    "send_at": {
                      "nullable": true,
                      "type": "string",
                      "description": "The scheduled send time for this broadcast in ISO8601 format. If no timezone is provided, UTC is assumed."
                    },
                    "thumbnail_alt": {
                      "nullable": true,
                      "type": "string"
                    },
                    "thumbnail_url": {
                      "nullable": true,
                      "type": "string"
                    },
                    "preview_text": {
                      "nullable": true,
                      "type": "string"
                    },
                    "subject": {
                      "nullable": true,
                      "type": "string"
                    },
                    "subscriber_filter": {
                      "nullable": true,
                      "description": "Filters your subscribers. At this time, we only support using only one filter group type via the API (e.g. `all`, `any`, or `none` but no combinations). If nothing is provided, will default to all of your subscribers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "all": {
                            "description": "Filters your subscribers using a logical AND of all provided segment and tag ids, i.e. a subscriber would have to be part of all segments and tags provided",
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "`segment` or `tag`"
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "ids"
                              ]
                            }
                          },
                          "any": {
                            "description": "Filters your subscribers using a logical OR of all provided segment and tag ids, i.e. a subscriber would have to be part of at least one of the segments or tags provided",
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "`segment` or `tag`"
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "ids"
                              ]
                            }
                          },
                          "none": {
                            "description": "Filters your subscribers using a logical NOT of all provided segment and tag ids, i.e. a subscriber would have to be in none of the segments or tags provided",
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "`segment` or `tag`"
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "ids"
                              ]
                            }
                          }
                        },
                        "required": [
                          "all",
                          "any",
                          "none"
                        ]
                      }
                    }
                  },
                  "required": [
                    "email_template_id",
                    "email_address",
                    "content",
                    "description",
                    "public",
                    "published_at",
                    "send_at",
                    "thumbnail_alt",
                    "thumbnail_url",
                    "preview_text",
                    "subject",
                    "subscriber_filter"
                  ]
                },
                "example": {
                  "email_template_id": 2,
                  "email_address": null,
                  "content": "<p>Let me introduce myself</p>",
                  "description": "Intro email",
                  "public": true,
                  "published_at": "2023-02-17T11:43:55+00:00",
                  "send_at": null,
                  "thumbnail_alt": null,
                  "thumbnail_url": null,
                  "preview_text": "Pleased to meet you!",
                  "subject": "Hello!",
                  "subscriber_filter": [
                    {
                      "all": [
                        {
                          "type": "segment",
                          "ids": [
                            16
                          ]
                        }
                      ],
                      "any": null,
                      "none": null
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Creates a new broadcast",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "broadcast": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "preview_text": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          },
                          "public": {
                            "type": "boolean"
                          },
                          "published_at": {
                            "type": "string"
                          },
                          "send_at": {
                            "type": "string",
                            "nullable": true
                          },
                          "thumbnail_alt": {
                            "nullable": true
                          },
                          "thumbnail_url": {
                            "nullable": true
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "email_template": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "subscriber_filter": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "all": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "ids"
                                    ]
                                  }
                                },
                                "any": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "ids"
                                    ]
                                  }
                                },
                                "none": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "ids"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "all"
                              ]
                            }
                          },
                          "publication_id": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "subject",
                          "preview_text",
                          "description",
                          "content",
                          "public",
                          "published_at",
                          "send_at",
                          "thumbnail_alt",
                          "thumbnail_url",
                          "email_address",
                          "email_template",
                          "subscriber_filter"
                        ]
                      }
                    },
                    "required": [
                      "broadcast"
                    ]
                  },
                  "example": {
                    "broadcast": {
                      "id": 28,
                      "created_at": "2023-02-17T11:43:55Z",
                      "subject": "Hello!",
                      "preview_text": "Pleased to meet you!",
                      "description": "Intro email",
                      "content": "<p>Let me introduce myself</p>",
                      "public": true,
                      "published_at": "2023-02-17T11:43:55Z",
                      "send_at": null,
                      "thumbnail_alt": null,
                      "thumbnail_url": null,
                      "email_address": "greetings@convertkit.dev",
                      "email_template": {
                        "id": 2,
                        "name": "Classic"
                      },
                      "subscriber_filter": [
                        {
                          "all": [
                            {
                              "type": "segment",
                              "ids": [
                                16
                              ]
                            }
                          ]
                        }
                      ],
                      "publication_id": 28
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "Returns a 403 with an error message if the current account is unauthorized to create a broadcast",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "You do not have sufficient permissions to access this resource. Please contact support."
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when one or more of the parameters were invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Email template not found",
                      "Only a single filter group is supported. Use one of `all`, `any`, or `none`."
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/broadcasts/stats": {
        "get": {
          "summary": "Get stats for a list of broadcasts",
          "description": "NOTE: This endpoint requires either a Pro level plan or developer authorization. <a href=https: //kit.typeform.com/to/YDVqPgNe#endpoint=all_broadcasts_stats_v4>Reach out here to get authorized!</a>",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns stats for all broadcasts on the account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "broadcasts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "stats": {
                              "type": "object",
                              "properties": {
                                "recipients": {
                                  "type": "integer"
                                },
                                "open_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "emails_opened": {
                                  "type": "integer"
                                },
                                "click_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "unsubscribe_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "unsubscribes": {
                                  "type": "integer"
                                },
                                "total_clicks": {
                                  "type": "integer"
                                },
                                "show_total_clicks": {
                                  "type": "boolean"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "progress": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "open_tracking_disabled": {
                                  "type": "boolean"
                                },
                                "click_tracking_disabled": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "recipients",
                                "open_rate",
                                "emails_opened",
                                "click_rate",
                                "unsubscribe_rate",
                                "unsubscribes",
                                "total_clicks",
                                "show_total_clicks",
                                "status",
                                "progress",
                                "open_tracking_disabled",
                                "click_tracking_disabled"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "stats"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "broadcasts",
                      "pagination"
                    ]
                  },
                  "example": {
                    "broadcasts": [
                      {
                        "id": 145,
                        "stats": {
                          "recipients": 0,
                          "open_rate": 0.0,
                          "emails_opened": 0,
                          "click_rate": 0.0,
                          "unsubscribe_rate": 0.0,
                          "unsubscribes": 0,
                          "total_clicks": 0,
                          "show_total_clicks": false,
                          "status": "draft",
                          "progress": 0.0,
                          "open_tracking_disabled": false,
                          "click_tracking_disabled": false
                        }
                      },
                      {
                        "id": 144,
                        "stats": {
                          "recipients": 0,
                          "open_rate": 0.0,
                          "emails_opened": 0,
                          "click_rate": 0.0,
                          "unsubscribe_rate": 0.0,
                          "unsubscribes": 0,
                          "total_clicks": 0,
                          "show_total_clicks": false,
                          "status": "draft",
                          "progress": 0.0,
                          "open_tracking_disabled": false,
                          "click_tracking_disabled": false
                        }
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzE0NV0=",
                      "end_cursor": "WzE0NF0=",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "Returns 403 if the account is not on a pro plan and has the feature flag disabled",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": "Developer account must be on pro plan or have been approved to use the bulk stats endpoint."
                  }
                }
              }
            }
          }
        }
      },
      "/v4/broadcasts/{broadcast_id}/clicks": {
        "get": {
          "summary": "Get link clicks for a broadcast",
          "description": "NOTE: Pagination parameters control the list of clicks for the top level broadcast.",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "broadcast_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 113
            }
          ],
          "responses": {
            "200": {
              "description": "Returns clicks for a broadcast",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "broadcast": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "clicks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                },
                                "unique_clicks": {
                                  "type": "integer"
                                },
                                "click_to_delivery_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "click_to_open_rate": {
                                  "type": "number",
                                  "format": "float"
                                }
                              },
                              "required": [
                                "url",
                                "unique_clicks",
                                "click_to_delivery_rate",
                                "click_to_open_rate"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "clicks"
                        ]
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "broadcast",
                      "pagination"
                    ]
                  },
                  "example": {
                    "broadcast": {
                      "id": 111,
                      "clicks": [
                        {
                          "url": "https://example.com/46",
                          "unique_clicks": 3,
                          "click_to_delivery_rate": 0.006,
                          "click_to_open_rate": 0.03
                        },
                        {
                          "url": "https://example.com/47",
                          "unique_clicks": 3,
                          "click_to_delivery_rate": 0.006,
                          "click_to_open_rate": 0.03
                        },
                        {
                          "url": "https://example.com/48",
                          "unique_clicks": 3,
                          "click_to_delivery_rate": 0.006,
                          "click_to_open_rate": 0.03
                        }
                      ]
                    },
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzE4XQ==",
                      "end_cursor": "WzE4XQ==",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/broadcasts/{broadcast_id}/stats": {
        "get": {
          "summary": "Get stats for a broadcast",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "broadcast_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 164
            }
          ],
          "responses": {
            "200": {
              "description": "Returns stats for a broadcast",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "broadcast": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "stats": {
                            "type": "object",
                            "properties": {
                              "recipients": {
                                "type": "integer"
                              },
                              "open_rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "emails_opened": {
                                "type": "integer"
                              },
                              "click_rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "unsubscribe_rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "unsubscribes": {
                                "type": "integer"
                              },
                              "total_clicks": {
                                "type": "integer"
                              },
                              "show_total_clicks": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "progress": {
                                "type": "number",
                                "format": "float"
                              },
                              "open_tracking_disabled": {
                                "type": "boolean"
                              },
                              "click_tracking_disabled": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "recipients",
                              "open_rate",
                              "emails_opened",
                              "click_rate",
                              "unsubscribe_rate",
                              "unsubscribes",
                              "total_clicks",
                              "show_total_clicks",
                              "status",
                              "progress",
                              "open_tracking_disabled",
                              "click_tracking_disabled"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "stats"
                        ]
                      }
                    },
                    "required": [
                      "broadcast"
                    ]
                  },
                  "example": {
                    "broadcast": {
                      "id": 163,
                      "stats": {
                        "recipients": 0,
                        "open_rate": 0.0,
                        "emails_opened": 0,
                        "click_rate": 0.0,
                        "unsubscribe_rate": 0.0,
                        "unsubscribes": 0,
                        "total_clicks": 0,
                        "show_total_clicks": false,
                        "status": "draft",
                        "progress": 0.0,
                        "open_tracking_disabled": false,
                        "click_tracking_disabled": false
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/broadcasts/{id}": {
        "delete": {
          "summary": "Delete a broadcast",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 83
            }
          ],
          "responses": {
            "204": {
              "description": "Deletes the broadcast",
              "content": {
                "": {
                  "schema": {
                    "type": "string"
                  },
                  "example": ""
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "Returns a 403 with an error message if the current account is unauthorized to update a broadcast",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "You do not have sufficient permissions to access this resource. Please contact support."
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message if the broadcast has already started sending or already sent",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Broadcast is already sending."
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            }
          }
        },
        "get": {
          "summary": "Get a broadcast",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 23
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the broadcast details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "broadcast": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "description": {
                            "nullable": true
                          },
                          "content": {
                            "nullable": true
                          },
                          "public": {
                            "type": "boolean"
                          },
                          "published_at": {
                            "nullable": true
                          },
                          "send_at": {
                            "nullable": true
                          },
                          "thumbnail_alt": {
                            "nullable": true
                          },
                          "thumbnail_url": {
                            "nullable": true
                          },
                          "email_address": {
                            "nullable": true
                          },
                          "preview_text": {
                            "nullable": true
                          },
                          "email_template": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "subscriber_filter": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "all": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                },
                                "any": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "ids"
                                    ]
                                  }
                                },
                                "none": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "ids"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "all"
                              ]
                            }
                          },
                          "publication_id": {
                            "type": "integer"
                          },
                          "clicks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                },
                                "unique_clicks": {
                                  "type": "integer"
                                },
                                "click_to_delivery_rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "click_to_open_rate": {
                                  "type": "number",
                                  "format": "float"
                                }
                              },
                              "required": [
                                "url",
                                "unique_clicks",
                                "click_to_delivery_rate",
                                "click_to_open_rate"
                              ]
                            }
                          },
                          "stats": {
                            "type": "object",
                            "properties": {
                              "recipients": {
                                "type": "integer"
                              },
                              "open_rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "emails_opened": {
                                "type": "integer"
                              },
                              "click_rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "unsubscribe_rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "unsubscribes": {
                                "type": "integer"
                              },
                              "total_clicks": {
                                "type": "integer"
                              },
                              "show_total_clicks": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "progress": {
                                "type": "number",
                                "format": "float"
                              },
                              "open_tracking_disabled": {
                                "type": "boolean"
                              },
                              "click_tracking_disabled": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "recipients",
                              "open_rate",
                              "emails_opened",
                              "click_rate",
                              "unsubscribe_rate",
                              "unsubscribes",
                              "total_clicks",
                              "show_total_clicks",
                              "status",
                              "progress",
                              "open_tracking_disabled",
                              "click_tracking_disabled"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "subject",
                          "description",
                          "content",
                          "public",
                          "published_at",
                          "send_at",
                          "thumbnail_alt",
                          "thumbnail_url",
                          "email_address",
                          "email_template",
                          "subscriber_filter"
                        ]
                      }
                    },
                    "required": [
                      "broadcast"
                    ]
                  },
                  "example": {
                    "broadcast": {
                      "id": 22,
                      "created_at": "2023-02-17T11:43:55Z",
                      "subject": "You'll never guess...",
                      "description": null,
                      "content": null,
                      "public": false,
                      "published_at": null,
                      "send_at": null,
                      "thumbnail_alt": null,
                      "thumbnail_url": null,
                      "email_address": null,
                      "preview_text": null,
                      "email_template": {
                        "id": 6,
                        "name": "Text Only"
                      },
                      "subscriber_filter": [
                        {
                          "all": [
                            {
                              "type": "all_subscribers"
                            }
                          ]
                        }
                      ],
                      "publication_id": 22,
                      "clicks": [
                        {
                          "url": "https://example.com/52",
                          "unique_clicks": 3,
                          "click_to_delivery_rate": 0.15,
                          "click_to_open_rate": 0.3
                        },
                        {
                          "url": "https://example.com/53",
                          "unique_clicks": 3,
                          "click_to_delivery_rate": 0.15,
                          "click_to_open_rate": 0.3
                        },
                        {
                          "url": "https://example.com/54",
                          "unique_clicks": 3,
                          "click_to_delivery_rate": 0.15,
                          "click_to_open_rate": 0.3
                        }
                      ],
                      "stats": {
                        "recipients": 20,
                        "open_rate": 0.0,
                        "emails_opened": 10,
                        "click_rate": 0.0,
                        "unsubscribe_rate": 0.0,
                        "unsubscribes": 0,
                        "total_clicks": 9,
                        "show_total_clicks": false,
                        "status": "draft",
                        "progress": 0.0,
                        "open_tracking_disabled": false,
                        "click_tracking_disabled": false
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a broadcast",
          "description": "Update an existing broadcast. Continue to draft or schedule to send a broadcast to all or a subset of your subscribers.<br/><br/>To save a draft, set `public` to false.<br/><br/>To schedule the broadcast for sending, set `public` to true and provide `send_at`. Scheduled broadcasts should contain a subject and your content, at a minimum.<br/><br/>We currently support targeting your subscribers based on segment or tag ids.",
          "tags": [
            "Broadcasts"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 59
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the broadcast and returns its details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "broadcast": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "preview_text": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          },
                          "public": {
                            "type": "boolean"
                          },
                          "published_at": {
                            "type": "string"
                          },
                          "send_at": {
                            "type": "string"
                          },
                          "thumbnail_alt": {
                            "nullable": true
                          },
                          "thumbnail_url": {
                            "nullable": true
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "email_template": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "subscriber_filter": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "all": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "ids"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "all"
                              ]
                            }
                          },
                          "publication_id": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "subject",
                          "preview_text",
                          "description",
                          "content",
                          "public",
                          "published_at",
                          "send_at",
                          "thumbnail_alt",
                          "thumbnail_url",
                          "email_address",
                          "email_template",
                          "subscriber_filter"
                        ]
                      }
                    },
                    "required": [
                      "broadcast"
                    ]
                  },
                  "example": {
                    "broadcast": {
                      "id": 50,
                      "created_at": "2023-02-17T11:43:55Z",
                      "subject": "Hello!",
                      "preview_text": "Pleased to meet you!",
                      "description": "Intro email",
                      "content": "<p>Let me introduce myself</p>",
                      "public": true,
                      "published_at": "2023-02-17T11:43:55Z",
                      "send_at": "2023-02-17T11:43:55Z",
                      "thumbnail_alt": null,
                      "thumbnail_url": null,
                      "email_address": "greetings@convertkit.dev",
                      "email_template": {
                        "id": 2,
                        "name": "Classic"
                      },
                      "subscriber_filter": [
                        {
                          "all": [
                            {
                              "type": "segment",
                              "ids": [
                                41
                              ]
                            }
                          ]
                        }
                      ],
                      "publication_id": 50
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "Returns a 403 with an error message if the current account is unauthorized to create a broadcast",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "You do not have sufficient permissions to access this resource. Please contact support."
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when one or more of the parameters are invalid or the campaign has already started sending",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Email template not found",
                      "Only a single filter group is supported. Use one of `all`, `any`, or `none`."
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email_template_id": {
                      "nullable": true,
                      "type": "integer",
                      "description": "Id of the email template to use. Uses the account's default template if not provided."
                    },
                    "email_address": {
                      "nullable": true,
                      "type": "string",
                      "description": "The sending email address to use. Uses the account's sending email address if not provided."
                    },
                    "content": {
                      "nullable": true,
                      "type": "string",
                      "description": "The HTML content of the email."
                    },
                    "description": {
                      "nullable": true,
                      "type": "string"
                    },
                    "public": {
                      "nullable": true,
                      "type": "boolean",
                      "description": "`true` to publish this broadcast. `false` to save a draft."
                    },
                    "published_at": {
                      "nullable": true,
                      "type": "string",
                      "description": "The published timestamp to display in ISO8601 format. If no timezone is provided, UTC is assumed."
                    },
                    "send_at": {
                      "nullable": true,
                      "type": "string",
                      "description": "The scheduled send time for this broadcast in ISO8601 format. If no timezone is provided, UTC is assumed."
                    },
                    "thumbnail_alt": {
                      "nullable": true,
                      "type": "string"
                    },
                    "thumbnail_url": {
                      "nullable": true,
                      "type": "string"
                    },
                    "preview_text": {
                      "nullable": true,
                      "type": "string"
                    },
                    "subject": {
                      "nullable": true,
                      "type": "string"
                    },
                    "subscriber_filter": {
                      "nullable": true,
                      "description": "Filters your subscribers. At this time, we only support using only one filter group type via the API (e.g. `all`, `any`, or `none` but no combinations). If nothing is provided, will default to all of your subscribers.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "all": {
                            "description": "Filters your subscribers using a logical AND of all provided segment and tag ids, i.e. a subscriber would have to be part of all segments and tags provided",
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "`segment` or `tag`"
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "ids"
                              ]
                            }
                          },
                          "any": {
                            "description": "Filters your subscribers using a logical OR of all provided segment and tag ids, i.e. a subscriber would have to be part of at least one of the segments or tags provided",
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "`segment` or `tag`"
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "ids"
                              ]
                            }
                          },
                          "none": {
                            "description": "Filters your subscribers using a logical NOT of all provided segment and tag ids, i.e. a subscriber would have to be in none of the segments or tags provided",
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "`segment` or `tag`"
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "ids"
                              ]
                            }
                          }
                        },
                        "required": [
                          "all",
                          "any",
                          "none"
                        ]
                      }
                    }
                  },
                  "required": [
                    "email_template_id",
                    "email_address",
                    "content",
                    "description",
                    "public",
                    "published_at",
                    "send_at",
                    "thumbnail_alt",
                    "thumbnail_url",
                    "preview_text",
                    "subject",
                    "subscriber_filter"
                  ]
                },
                "example": {
                  "email_template_id": 2,
                  "email_address": null,
                  "content": "<p>Let me introduce myself</p>",
                  "description": "Intro email",
                  "public": true,
                  "published_at": "2023-02-17T11:43:55+00:00",
                  "send_at": "2023-02-17T11:43:55+00:00",
                  "thumbnail_alt": null,
                  "thumbnail_url": null,
                  "preview_text": "Pleased to meet you!",
                  "subject": "Hello!",
                  "subscriber_filter": [
                    {
                      "all": [
                        {
                          "type": "segment",
                          "ids": [
                            41
                          ]
                        }
                      ],
                      "any": null,
                      "none": null
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "/v4/bulk/custom_fields": {
        "post": {
          "summary": "Bulk create custom fields",
          "description": "See \"[Bulk & async processing](#bulk-amp-async-processing)\" for more information.",
          "tags": [
            "Custom Fields"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Creates the custom_fields synchronously when 100 or less custom fields are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "custom_fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "label",
                            "key",
                            "name",
                            "created_at"
                          ]
                        }
                      },
                      "failures": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "label",
                                "key",
                                "name",
                                "created_at"
                              ]
                            },
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "custom_field",
                            "errors"
                          ]
                        }
                      }
                    },
                    "required": [
                      "custom_fields",
                      "failures"
                    ]
                  },
                  "example": {
                    "custom_fields": [
                      {
                        "id": 80,
                        "label": "Interests",
                        "key": "interests",
                        "name": "ck_field_80_interests",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 79,
                        "label": "Last name",
                        "key": "last_name",
                        "name": "ck_field_79_last_name",
                        "created_at": "2023-02-17T11:43:55Z"
                      }
                    ],
                    "failures": [
                      {
                        "custom_field": {
                          "id": 78,
                          "label": "Existing Custom Field",
                          "key": "existing_custom_field",
                          "name": "ck_field_78_existing_custom_field",
                          "created_at": "2023-02-17T11:43:55Z"
                        },
                        "errors": [
                          "Label has already been taken"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "202": {
              "description": "Creates or updates custom_fields asynchronously when more than 100 custom fields are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {}
                  },
                  "example": {}
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "413": {
              "description": "Returns a 413 when the size of the request would exceed the account's data limit for enqueued bulk requests",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "This request exceeds your queued bulk requests limit. Please wait while we process your existing requests and try again later."
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when `custom_fields` is empty or not an array",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "No custom fields included for processing"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "custom_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "label"
                        ]
                      }
                    },
                    "callback_url": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "custom_fields"
                  ]
                },
                "example": {
                  "custom_fields": [
                    {
                      "label": "Test Custom Field 0"
                    },
                    {
                      "label": "Test Custom Field 1"
                    },
                    {
                      "label": "Test Custom Field 2"
                    },
                    {
                      "label": "Test Custom Field 3"
                    }
                  ],
                  "callback_url": null
                }
              }
            }
          }
        }
      },
      "/v4/bulk/forms/subscribers": {
        "post": {
          "summary": "Bulk add subscribers to forms",
          "description": "Adding subscribers to double opt-in forms will trigger sending an Incentive Email. Subscribers already added to the specified form will not receive the Incentive Email again. For more information about double opt-in see \"[Double opt-in](#double-opt-in)\". <br/><br/>The subscribers being added to the form must already exist. Subscribers can be created in bulk using the \"[Bulk create subscriber](#bulk-create-subscribers)\" endpoint.<br/><br/>See \"[Bulk & async processing](#bulk-amp-async-processing)\" for more information.",
          "tags": [
            "Forms"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Adds subscribers to forms synchronously when 100 or less form/subscribers are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "added_at": {
                              "type": "string"
                            },
                            "referrer_utm_parameters": {
                              "type": "object",
                              "properties": {
                                "source": {
                                  "type": "string"
                                },
                                "medium": {
                                  "type": "string"
                                },
                                "campaign": {
                                  "type": "string"
                                },
                                "term": {
                                  "type": "string"
                                },
                                "content": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "source",
                                "medium",
                                "campaign",
                                "term",
                                "content"
                              ]
                            },
                            "referrer": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "email_address",
                            "created_at",
                            "added_at"
                          ]
                        }
                      },
                      "failures": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "subscription": {
                              "type": "object",
                              "properties": {
                                "form_id": {
                                  "type": "integer"
                                },
                                "subscriber_id": {
                                  "nullable": true
                                },
                                "referrer": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "form_id",
                                "subscriber_id",
                                "referrer"
                              ]
                            }
                          },
                          "required": [
                            "errors",
                            "subscription"
                          ]
                        }
                      }
                    },
                    "required": [
                      "subscribers",
                      "failures"
                    ]
                  },
                  "example": {
                    "subscribers": [
                      {
                        "id": 481,
                        "first_name": "Sub",
                        "email_address": "sub@example.com",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off",
                        "referrer_utm_parameters": {
                          "source": "facebook",
                          "medium": "cpc",
                          "campaign": "black_friday",
                          "term": "car_owners",
                          "content": "get_10_off"
                        }
                      },
                      {
                        "id": 481,
                        "first_name": "Sub",
                        "email_address": "sub@example.com",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off",
                        "referrer_utm_parameters": {
                          "source": "facebook",
                          "medium": "cpc",
                          "campaign": "black_friday",
                          "term": "car_owners",
                          "content": "get_10_off"
                        }
                      }
                    ],
                    "failures": [
                      {
                        "errors": [
                          "Subscriber does not exist"
                        ],
                        "subscription": {
                          "form_id": 112,
                          "subscriber_id": null,
                          "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                        }
                      },
                      {
                        "errors": [
                          "Form does not exist"
                        ],
                        "subscription": {
                          "form_id": null,
                          "subscriber_id": 481,
                          "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "202": {
              "description": "Adds subscribers to forms asynchronously when more than 100 form/subscribers are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {}
                  },
                  "example": {}
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "413": {
              "description": "Returns a 413 when the size of the request would exceed the account's data limit for enqueued bulk requests",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "This request exceeds your queued bulk requests limit. Please wait while we process your existing requests and try again later."
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when `additions` is empty or not an array",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "No additions included for processing"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "additions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "form_id": {
                            "type": "integer"
                          },
                          "subscriber_id": {
                            "type": "integer"
                          },
                          "referrer": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "form_id",
                          "subscriber_id"
                        ]
                      }
                    },
                    "callback_url": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "additions"
                  ]
                },
                "example": {
                  "additions": [
                    {
                      "form_id": 0,
                      "subscriber_id": 0
                    },
                    {
                      "form_id": 1,
                      "subscriber_id": 1
                    },
                    {
                      "form_id": 2,
                      "subscriber_id": 2
                    },
                    {
                      "form_id": 3,
                      "subscriber_id": 3
                    }
                  ],
                  "callback_url": null
                }
              }
            }
          }
        }
      },
      "/v4/bulk/subscribers": {
        "post": {
          "summary": "Bulk create subscribers",
          "description": "See \"[Bulk & async processing](#bulk-amp-async-processing)\" for more information.",
          "tags": [
            "Subscribers"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Creates or updates the subscribers synchronously when 100 or less subscribers are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "first_name": {
                              "nullable": true
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "email_address",
                            "state"
                          ]
                        }
                      },
                      "failures": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "subscriber": {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string"
                                },
                                "email_address": {
                                  "nullable": true
                                },
                                "state": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "nullable": true
                                }
                              },
                              "required": [
                                "first_name",
                                "email_address",
                                "state"
                              ]
                            },
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "subscriber",
                            "errors"
                          ]
                        }
                      }
                    },
                    "required": [
                      "subscribers",
                      "failures"
                    ]
                  },
                  "example": {
                    "subscribers": [
                      {
                        "id": 464,
                        "first_name": null,
                        "email_address": "brooke@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 465,
                        "first_name": "Camille",
                        "email_address": "camille@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 463,
                        "first_name": "Alice",
                        "email_address": "alice@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z"
                      }
                    ],
                    "failures": [
                      {
                        "subscriber": {
                          "first_name": "Benito",
                          "email_address": null,
                          "state": "active",
                          "created_at": null
                        },
                        "errors": [
                          "Email address is invalid"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "202": {
              "description": "Creates or updates subscribers asynchronously when more than 100 subscribers are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {}
                  },
                  "example": {}
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "Returns a 403 when the number of subscribers in the request would exceed the account's subscriber limit",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "This request would exceed your subscriber limit"
                    ]
                  }
                }
              }
            },
            "413": {
              "description": "Returns a 413 when the size of the request would exceed the account's data limit for enqueued bulk requests",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "This request exceeds your queued bulk requests limit. Please wait while we process your existing requests and try again later."
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when `subscribers` is empty or not an array",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "No subscribers included for processing"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscribers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string",
                            "description": "Create subscriber in this state (`active`, `bounced`, `cancelled`, `complained` or  `inactive`). Defaults to `active`."
                          }
                        },
                        "required": [
                          "first_name",
                          "email_address"
                        ]
                      }
                    },
                    "callback_url": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "subscribers"
                  ]
                },
                "example": {
                  "subscribers": [
                    {
                      "first_name": "Test Subscriber 0",
                      "email_address": "subscriber_0@convertkit.dev"
                    },
                    {
                      "first_name": "Test Subscriber 1",
                      "email_address": "subscriber_1@convertkit.dev"
                    },
                    {
                      "first_name": "Test Subscriber 2",
                      "email_address": "subscriber_2@convertkit.dev"
                    },
                    {
                      "first_name": "Test Subscriber 3",
                      "email_address": "subscriber_3@convertkit.dev"
                    }
                  ],
                  "callback_url": null
                }
              }
            }
          }
        }
      },
      "/v4/bulk/tags": {
        "post": {
          "summary": "Bulk create tags",
          "description": "See \"[Bulk & async processing](#bulk-amp-async-processing)\" for more information.",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Creates or returns existing tags synchronously when 100 or less tags are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "created_at"
                          ]
                        }
                      },
                      "failures": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tag": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "created_at"
                              ]
                            },
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "tag",
                            "errors"
                          ]
                        }
                      }
                    },
                    "required": [
                      "tags",
                      "failures"
                    ]
                  },
                  "example": {
                    "tags": [
                      {
                        "id": 55,
                        "name": "Existing Tag",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 56,
                        "name": "Attended Event",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 57,
                        "name": "Newsletter",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 58,
                        "name": "Re-engage",
                        "created_at": "2023-02-17T11:43:55Z"
                      }
                    ],
                    "failures": []
                  }
                }
              }
            },
            "202": {
              "description": "Creates or returns existing tags asynchronously when more than 100 tags are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {}
                  },
                  "example": {}
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "413": {
              "description": "Returns a 413 when the size of the request would exceed the account's data limit for enqueued bulk requests",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "This request exceeds your queued bulk requests limit. Please wait while we process your existing requests and try again later."
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when `tags` is empty or not an array",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "No tags included for processing"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "callback_url": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "tags"
                  ]
                },
                "example": {
                  "tags": [
                    {
                      "name": "Test Tag 0"
                    },
                    {
                      "name": "Test Tag 1"
                    },
                    {
                      "name": "Test Tag 2"
                    },
                    {
                      "name": "Test Tag 3"
                    }
                  ],
                  "callback_url": null
                }
              }
            }
          }
        }
      },
      "/v4/bulk/tags/subscribers": {
        "delete": {
          "summary": "Bulk remove tags from subscribers",
          "description": "See \"[Bulk & async processing](#bulk-amp-async-processing)\" for more information.",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Deletes the taggings synchronously when 100 or less tags/subscribers are provided",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "failures": {
                        "type": "array",
                        "items": {}
                      }
                    },
                    "required": [
                      "failures"
                    ]
                  },
                  "example": {
                    "failures": []
                  }
                }
              }
            },
            "202": {
              "description": "Destroys taggings asynchronously when more than 100 tags/subscribers are provided",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {}
                  },
                  "example": {}
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "413": {
              "description": "Returns a 413 when the size of the request would exceed the account's data limit for enqueued bulk requests",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "This request exceeds your queued bulk requests limit. Please wait while we process your existing requests and try again later."
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when `taggings` is empty or not an array",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "No taggings included for processing"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taggings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag_id": {
                            "type": "integer"
                          },
                          "subscriber_id": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "tag_id",
                          "subscriber_id"
                        ]
                      }
                    },
                    "callback_url": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "taggings"
                  ]
                },
                "example": {
                  "taggings": [
                    {
                      "tag_id": 0,
                      "subscriber_id": 0
                    },
                    {
                      "tag_id": 1,
                      "subscriber_id": 1
                    },
                    {
                      "tag_id": 2,
                      "subscriber_id": 2
                    },
                    {
                      "tag_id": 3,
                      "subscriber_id": 3
                    }
                  ],
                  "callback_url": null
                }
              }
            }
          }
        },
        "post": {
          "summary": "Bulk tag subscribers",
          "description": "The subscribers being tagged must already exist. Subscribers can be created in bulk using the \"[Bulk create subscriber](#bulk-create-subscribers)\" endpoint.<br/><br/>See \"[Bulk & async processing](#bulk-amp-async-processing)\" for more information.",
          "tags": [
            "Tags"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Creates the taggings synchronously when 100 or less tags/subscribers are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "tagged_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "email_address",
                            "created_at",
                            "tagged_at"
                          ]
                        }
                      },
                      "failures": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tagging": {
                              "type": "object",
                              "properties": {
                                "tag_id": {
                                  "type": "integer"
                                },
                                "subscriber_id": {
                                  "nullable": true
                                }
                              },
                              "required": [
                                "tag_id",
                                "subscriber_id"
                              ]
                            }
                          },
                          "required": [
                            "errors",
                            "tagging"
                          ]
                        }
                      }
                    },
                    "required": [
                      "subscribers",
                      "failures"
                    ]
                  },
                  "example": {
                    "subscribers": [
                      {
                        "id": 496,
                        "first_name": "Sub",
                        "email_address": "sub@example.com",
                        "created_at": "2023-02-17T11:43:55Z",
                        "tagged_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 496,
                        "first_name": "Sub",
                        "email_address": "sub@example.com",
                        "created_at": "2023-02-17T11:43:55Z",
                        "tagged_at": "2023-02-17T11:43:55Z"
                      }
                    ],
                    "failures": [
                      {
                        "errors": [
                          "Subscriber does not exist"
                        ],
                        "tagging": {
                          "tag_id": 69,
                          "subscriber_id": null
                        }
                      },
                      {
                        "errors": [
                          "Tag does not exist"
                        ],
                        "tagging": {
                          "tag_id": null,
                          "subscriber_id": 496
                        }
                      }
                    ]
                  }
                }
              }
            },
            "202": {
              "description": "Creates or updates taggings asynchronously when more than 100 tags/subscribers are requested",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {}
                  },
                  "example": {}
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "413": {
              "description": "Returns a 413 when the size of the request would exceed the account's data limit for enqueued bulk requests",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "This request exceeds your queued bulk requests limit. Please wait while we process your existing requests and try again later."
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when `taggings` is empty or not an array",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "No taggings included for processing"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taggings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tag_id": {
                            "type": "integer"
                          },
                          "subscriber_id": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "tag_id",
                          "subscriber_id"
                        ]
                      }
                    },
                    "callback_url": {
                      "nullable": true
                    }
                  },
                  "required": [
                    "taggings"
                  ]
                },
                "example": {
                  "taggings": [
                    {
                      "tag_id": 0,
                      "subscriber_id": 0
                    },
                    {
                      "tag_id": 1,
                      "subscriber_id": 1
                    },
                    {
                      "tag_id": 2,
                      "subscriber_id": 2
                    },
                    {
                      "tag_id": 3,
                      "subscriber_id": 3
                    }
                  ],
                  "callback_url": null
                }
              }
            }
          },
          "security": [
            {
              "OAuth2": []
            }
          ]
        }
      },
      "/v4/custom_fields": {
        "get": {
          "summary": "List custom fields",
          "description": "A custom field allows you to collect subscriber information beyond the standard fields of first name and email address. An example would be a custom field called last name so you can get the full names of your subscribers.<br/><br/>You create a custom field, and then you're able to use that in your forms or emails.",
          "tags": [
            "Custom Fields"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all custom fields for your account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "custom_fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "key",
                            "label"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "nullable": true,
                            "type": "string"
                          },
                          "end_cursor": {
                            "nullable": true,
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "custom_fields",
                      "pagination"
                    ]
                  },
                  "example": {
                    "custom_fields": [
                      {
                        "id": 1,
                        "name": "ck_field_1_last_name",
                        "key": "last_name",
                        "label": "Last name"
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzFd",
                      "end_cursor": "WzFd",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a custom field",
          "description": "Create a custom field for your account. The label field must be unique to your account. Whitespace will be removed from the beginning and the end of your label.<br/><br/>Additionally, a key field and a name field will be generated for you. The key is an ASCII-only, lowercased, underscored representation of your label. This key must be unique to your account. Keys are used in personalization tags in sequences and broadcasts. Names are unique identifiers for use in the HTML of custom forms. They are made up of a combination of ID and the key of the custom field prefixed with \"ck_field\".",
          "tags": [
            "Custom Fields"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "201": {
              "description": "Creates a new custom field and returns its details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "custom_field": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "key",
                          "label"
                        ]
                      }
                    },
                    "required": [
                      "custom_field"
                    ]
                  },
                  "example": {
                    "custom_field": {
                      "id": 6,
                      "name": "ck_field_6_interests",
                      "key": "interests",
                      "label": "Interests"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when the label is missing",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Label can't be blank"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "label"
                  ]
                },
                "example": {
                  "label": "Interests"
                }
              }
            }
          }
        }
      },
      "/v4/custom_fields/{id}": {
        "delete": {
          "summary": "Delete custom field",
          "description": "This will remove all data in this field from your subscribers.",
          "tags": [
            "Custom Fields"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 42
            }
          ],
          "responses": {
            "204": {
              "description": "Deletes the custom field",
              "content": {
                "": {
                  "schema": {
                    "type": "string"
                  },
                  "example": ""
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when the custom field cannot be deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Unable to destroy the custom field."
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            }
          }
        },
        "put": {
          "summary": "Update a custom field",
          "description": "Updates a custom field label (see [Create a custom field](#create-a-custom-field) above for more information on labels). Note that the key will change but the name remains the same when the label is updated.<br/><br/><strong>Warning: </strong>An update to a custom field will break all of the liquid personalization tags in emails that reference it - e.g. if you update a `Zip_Code` custom field to `Post_Code`, all liquid tags referencing `{{ subscriber.Zip_Code }}` would no longer work and need to be replaced with `{{ subscriber.Post_Code }}`.",
          "tags": [
            "Custom Fields"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 24
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the custom field and returns its details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "custom_field": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "key",
                          "label"
                        ]
                      }
                    },
                    "required": [
                      "custom_field"
                    ]
                  },
                  "example": {
                    "custom_field": {
                      "id": 22,
                      "name": "ck_field_22_last_name",
                      "key": "last_name",
                      "label": "Last name"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error mesage when one or more of the parameters are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Label can't be blank"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "label"
                  ]
                },
                "example": {
                  "label": "Last name"
                }
              }
            }
          }
        }
      },
      "/v4/email_templates": {
        "get": {
          "summary": "List email templates",
          "tags": [
            "Email Templates"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all email templates for your account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      },
                      "email_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "is_default": {
                              "type": "boolean"
                            },
                            "category": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "is_default",
                            "category"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination"
                    ]
                  },
                  "example": {
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "Wzld",
                      "end_cursor": "WzFd",
                      "per_page": 500
                    },
                    "email_templates": [
                      {
                        "id": 9,
                        "name": "Custom HTML Template",
                        "is_default": false,
                        "category": "HTML"
                      },
                      {
                        "id": 8,
                        "name": "Story",
                        "is_default": false,
                        "category": "Starting point"
                      },
                      {
                        "id": 6,
                        "name": "Text Only",
                        "is_default": true,
                        "category": "HTML"
                      },
                      {
                        "id": 4,
                        "name": "Modern",
                        "is_default": false,
                        "category": "HTML"
                      },
                      {
                        "id": 2,
                        "name": "Classic",
                        "is_default": false,
                        "category": "HTML"
                      },
                      {
                        "id": 1,
                        "name": "Card",
                        "is_default": false,
                        "category": "HTML"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/forms": {
        "get": {
          "summary": "List forms",
          "tags": [
            "Forms"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter forms that have this status (`active`, `archived`, `trashed`, or `all`). Defaults to `active`.",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "type",
              "description": "Filter forms and landing pages by type. Use `embed` for embedded forms. Use `hosted` for landing pages.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all forms and landing pages (embedded and hosted) for your account (including active and archived)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "forms": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "format": {
                              "nullable": true
                            },
                            "embed_js": {
                              "type": "string"
                            },
                            "embed_url": {
                              "type": "string"
                            },
                            "archived": {
                              "type": "boolean"
                            },
                            "uid": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "type",
                            "format",
                            "embed_js",
                            "embed_url",
                            "archived",
                            "uid"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "end_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "forms",
                      "pagination"
                    ]
                  },
                  "example": {
                    "forms": [
                      {
                        "id": 44,
                        "name": "Sign up",
                        "created_at": "2023-02-17T11:43:55Z",
                        "type": "embed",
                        "format": null,
                        "embed_js": "https://kit-greetings.ck.page/f049e3d9ab/index.js",
                        "embed_url": "https://kit-greetings.ck.page/f049e3d9ab",
                        "archived": false,
                        "uid": "f049e3d9ab"
                      },
                      {
                        "id": 43,
                        "name": "Lead gen",
                        "created_at": "2023-02-17T11:43:55Z",
                        "type": "hosted",
                        "format": null,
                        "embed_js": "https://kit-greetings.ck.page/ae7c1adaa1/index.js",
                        "embed_url": "https://kit-greetings.ck.page/ae7c1adaa1",
                        "archived": false,
                        "uid": "ae7c1adaa1"
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzQ0XQ==",
                      "end_cursor": "WzQzXQ==",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/forms/{form_id}/subscribers": {
        "get": {
          "summary": "List subscribers for a form",
          "tags": [
            "Forms"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "added_after",
              "in": "query",
              "description": "Filter subscribers who have been added to the form after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-14T11:43:55Z"
            },
            {
              "name": "added_before",
              "in": "query",
              "description": "Filter subscribers who have been added to the form before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-18T11:43:55Z"
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "created_after",
              "in": "query",
              "description": "Filter subscribers who have been created after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-01-17T11:43:55Z"
            },
            {
              "name": "created_before",
              "in": "query",
              "description": "Filter subscribers who have been created before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-18T11:43:55Z"
            },
            {
              "name": "form_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 138
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter subscribers who have this status (`active`, `inactive`, `bounced`, `complained`, `cancelled` or `all`). Defaults to `active`.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "all"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of subscribers for the specified form",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "first_name": {
                              "nullable": true
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "added_at": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "category": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "category"
                              ]
                            },
                            "referrer_utm_parameters": {
                              "type": "object",
                              "properties": {
                                "source": {
                                  "type": "string"
                                },
                                "medium": {
                                  "type": "string"
                                },
                                "campaign": {
                                  "type": "string"
                                },
                                "term": {
                                  "type": "string"
                                },
                                "content": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "source",
                                "medium",
                                "campaign",
                                "term",
                                "content"
                              ]
                            },
                            "referrer": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "email_address",
                            "state",
                            "created_at",
                            "added_at",
                            "fields"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "subscribers",
                      "pagination"
                    ]
                  },
                  "example": {
                    "subscribers": [
                      {
                        "id": 519,
                        "first_name": null,
                        "email_address": "subscriber301@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": "One"
                        },
                        "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off",
                        "referrer_utm_parameters": {
                          "source": "facebook",
                          "medium": "cpc",
                          "campaign": "black_friday",
                          "term": "car_owners",
                          "content": "get_10_off"
                        }
                      },
                      {
                        "id": 518,
                        "first_name": null,
                        "email_address": "subscriber300@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": null
                        },
                        "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off",
                        "referrer_utm_parameters": {
                          "source": "facebook",
                          "medium": "cpc",
                          "campaign": "black_friday",
                          "term": "car_owners",
                          "content": "get_10_off"
                        }
                      },
                      {
                        "id": 517,
                        "first_name": null,
                        "email_address": "subscriber299@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": null
                        },
                        "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off",
                        "referrer_utm_parameters": {
                          "source": "facebook",
                          "medium": "cpc",
                          "campaign": "black_friday",
                          "term": "car_owners",
                          "content": "get_10_off"
                        }
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzUxOV0=",
                      "end_cursor": "WzUxN10=",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Add subscriber to form by email address",
          "description": "The subscriber being added to the form must already exist. Subscribers can be created using the \"[Create a subscriber](#create-a-subscriber)\" endpoint.",
          "tags": [
            "Forms"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "form_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 194
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a 200 when the subscriber has already been added to the form",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          },
                          "referrer_utm_parameters": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "type": "string"
                              },
                              "medium": {
                                "type": "string"
                              },
                              "campaign": {
                                "type": "string"
                              },
                              "term": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "source",
                              "medium",
                              "campaign",
                              "term",
                              "content"
                            ]
                          },
                          "referrer": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 615,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {},
                      "referrer_utm_parameters": {
                        "source": "facebook",
                        "medium": "cpc",
                        "campaign": "black_friday",
                        "term": "car_owners",
                        "content": "get_10_off"
                      },
                      "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Adds the subscriber to the form",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          },
                          "referrer_utm_parameters": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "type": "string"
                              },
                              "medium": {
                                "type": "string"
                              },
                              "campaign": {
                                "type": "string"
                              },
                              "term": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "source",
                              "medium",
                              "campaign",
                              "term",
                              "content"
                            ]
                          },
                          "referrer": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 616,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {},
                      "referrer_utm_parameters": {
                        "source": "facebook",
                        "medium": "cpc",
                        "campaign": "black_friday",
                        "term": "car_owners",
                        "content": "get_10_off"
                      },
                      "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when missing email address",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Either subscriber id or email address is required to add subscriber to form"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    },
                    "referrer": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email_address"
                  ]
                },
                "example": {
                  "email_address": "alice@convertkit.dev",
                  "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                }
              }
            }
          }
        }
      },
      "/v4/forms/{form_id}/subscribers/{id}": {
        "post": {
          "summary": "Add subscriber to form",
          "description": "The subscriber being added to the form must already exist. Subscribers can be created using the \"[Create a subscriber](#create-a-subscriber)\" endpoint.",
          "tags": [
            "Forms"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "form_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 174
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 599
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a 200 when the subscriber has already been added to the form",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          },
                          "referrer_utm_parameters": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "type": "string"
                              },
                              "medium": {
                                "type": "string"
                              },
                              "campaign": {
                                "type": "string"
                              },
                              "term": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "source",
                              "medium",
                              "campaign",
                              "term",
                              "content"
                            ]
                          },
                          "referrer": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 595,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {},
                      "referrer_utm_parameters": {
                        "source": "facebook",
                        "medium": "cpc",
                        "campaign": "black_friday",
                        "term": "car_owners",
                        "content": "get_10_off"
                      },
                      "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Adds the subscriber to the form",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          },
                          "referrer_utm_parameters": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "type": "string"
                              },
                              "medium": {
                                "type": "string"
                              },
                              "campaign": {
                                "type": "string"
                              },
                              "term": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "source",
                              "medium",
                              "campaign",
                              "term",
                              "content"
                            ]
                          },
                          "referrer": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 596,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {},
                      "referrer_utm_parameters": {
                        "source": "facebook",
                        "medium": "cpc",
                        "campaign": "black_friday",
                        "term": "car_owners",
                        "content": "get_10_off"
                      },
                      "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "referrer": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "referrer"
                  ]
                },
                "example": {
                  "referrer": "https://mywebsite.com/bfpromo/?utm_source=facebook&utm_medium=cpc&utm_campaign=black_friday&utm_term=car_owners&utm_content=get_10_off"
                }
              }
            }
          }
        }
      },
      "/v4/purchases": {
        "get": {
          "summary": "List purchases",
          "tags": [
            "Purchases"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all purchases for your account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "purchases": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "transaction_id": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "transaction_time": {
                              "type": "string"
                            },
                            "subtotal": {
                              "type": "number",
                              "format": "float"
                            },
                            "discount": {
                              "type": "number",
                              "format": "float"
                            },
                            "tax": {
                              "type": "number",
                              "format": "float"
                            },
                            "total": {
                              "type": "number",
                              "format": "float"
                            },
                            "products": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "quantity": {
                                    "type": "integer"
                                  },
                                  "lid": {
                                    "type": "string"
                                  },
                                  "unit_price": {
                                    "type": "number",
                                    "format": "float"
                                  },
                                  "sku": {
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "pid": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "quantity",
                                  "lid",
                                  "unit_price",
                                  "sku",
                                  "name",
                                  "pid"
                                ]
                              }
                            }
                          },
                          "required": [
                            "id",
                            "transaction_id",
                            "status",
                            "email_address",
                            "currency",
                            "transaction_time",
                            "subtotal",
                            "discount",
                            "tax",
                            "total",
                            "products"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "end_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "purchases",
                      "pagination"
                    ]
                  },
                  "example": {
                    "purchases": [
                      {
                        "id": 3,
                        "transaction_id": "512-41-4101",
                        "status": "paid",
                        "email_address": "pru.magoo@convertkit.dev",
                        "currency": "USD",
                        "transaction_time": "2023-02-17T11:43:55Z",
                        "subtotal": 5.0,
                        "discount": 0.0,
                        "tax": 0.0,
                        "total": 5.0,
                        "products": [
                          {
                            "quantity": 1,
                            "lid": "000-13-0000",
                            "unit_price": 0.05,
                            "sku": null,
                            "name": "Tip",
                            "pid": "111-75-7524"
                          }
                        ]
                      },
                      {
                        "id": 2,
                        "transaction_id": "323-79-5320",
                        "status": "paid",
                        "email_address": "pru.magoo@convertkit.dev",
                        "currency": "USD",
                        "transaction_time": "2023-02-17T11:43:55Z",
                        "subtotal": 10.0,
                        "discount": 0.0,
                        "tax": 1.05,
                        "total": 11.05,
                        "products": [
                          {
                            "quantity": 1,
                            "lid": "000-12-0000",
                            "unit_price": 0.1,
                            "sku": null,
                            "name": "Monthly Game Review",
                            "pid": "000-11-0000"
                          }
                        ]
                      },
                      {
                        "id": 1,
                        "transaction_id": "796-92-4892",
                        "status": "paid",
                        "email_address": "pru.magoo@convertkit.dev",
                        "currency": "USD",
                        "transaction_time": "2023-02-17T11:43:55Z",
                        "subtotal": 78.66,
                        "discount": 5.0,
                        "tax": 7.87,
                        "total": 81.53,
                        "products": [
                          {
                            "quantity": 1,
                            "lid": "811-75-7900",
                            "unit_price": 23.22,
                            "sku": null,
                            "name": "Phantom Hourglass",
                            "pid": "804-02-4430"
                          },
                          {
                            "quantity": 1,
                            "lid": "766-49-1241",
                            "unit_price": 32.22,
                            "sku": null,
                            "name": "Twilight Princess",
                            "pid": "833-51-1151"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzNd",
                      "end_cursor": "WzFd",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a purchase",
          "tags": [
            "Purchases"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "201": {
              "description": "Creates a purchase for the provided subscriber and returns its details. It also creates products if they don't exist.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "purchase": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "transaction_time": {
                            "type": "string"
                          },
                          "subtotal": {
                            "type": "number",
                            "format": "float"
                          },
                          "discount": {
                            "type": "number",
                            "format": "float"
                          },
                          "tax": {
                            "type": "number",
                            "format": "float"
                          },
                          "total": {
                            "type": "number",
                            "format": "float"
                          },
                          "products": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quantity": {
                                  "type": "integer"
                                },
                                "lid": {
                                  "type": "string"
                                },
                                "unit_price": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "sku": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "pid": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "quantity",
                                "lid",
                                "unit_price",
                                "sku",
                                "name",
                                "pid"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "transaction_id",
                          "status",
                          "email_address",
                          "currency",
                          "transaction_time",
                          "subtotal",
                          "discount",
                          "tax",
                          "total",
                          "products"
                        ]
                      }
                    },
                    "required": [
                      "purchase"
                    ]
                  },
                  "example": {
                    "purchase": {
                      "id": 19,
                      "transaction_id": "796-92-4892",
                      "status": "paid",
                      "email_address": "pru.magoo@convertkit.dev",
                      "currency": "USD",
                      "transaction_time": "2023-02-17T11:43:55Z",
                      "subtotal": 78.66,
                      "discount": 5.0,
                      "tax": 7.87,
                      "total": 81.53,
                      "products": [
                        {
                          "quantity": 1,
                          "lid": "811-75-7900",
                          "unit_price": 23.22,
                          "sku": "SM21-SH-M02-RD-S-001",
                          "name": "Phantom Hourglass",
                          "pid": "804-02-4430"
                        },
                        {
                          "quantity": 1,
                          "lid": "766-49-1241",
                          "unit_price": 32.22,
                          "sku": "WT21-JK-M03-BK-L-012",
                          "name": "Twilight Princess",
                          "pid": "833-51-1151"
                        },
                        {
                          "quantity": 1,
                          "lid": "563-95-8878",
                          "unit_price": 23.22,
                          "sku": "FL21-TS-M01-BL-M-020",
                          "name": "Four Swords",
                          "pid": "217-99-4325"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 when one or more of the parameters are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Transaction cannot be blank"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "purchase": {
                      "type": "object",
                      "properties": {
                        "email_address": {
                          "type": "string",
                          "description": "The subscriber that the purchase belongs to"
                        },
                        "first_name": {
                          "type": "string",
                          "nullable": true,
                          "description": "The first name of the subscriber"
                        },
                        "transaction_id": {
                          "type": "string",
                          "description": "A unique ID for the purchase"
                        },
                        "status": {
                          "type": "string",
                          "nullable": true,
                          "description": "We currently support a status of `paid`"
                        },
                        "subtotal": {
                          "type": "number",
                          "nullable": true,
                          "format": "float"
                        },
                        "tax": {
                          "type": "number",
                          "nullable": true,
                          "format": "float"
                        },
                        "shipping": {
                          "type": "integer",
                          "nullable": true
                        },
                        "discount": {
                          "type": "number",
                          "nullable": true,
                          "format": "float"
                        },
                        "total": {
                          "type": "number",
                          "nullable": true,
                          "format": "float"
                        },
                        "currency": {
                          "type": "string",
                          "description": "3 letter currency code (e.g. `USD`)"
                        },
                        "transaction_time": {
                          "type": "string",
                          "nullable": true
                        },
                        "products": {
                          "type": "array",
                          "description": "Array of purchased products",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Product name"
                              },
                              "pid": {
                                "type": "string",
                                "description": "This is your identifier for a product. Each product provided in the `products` array must have a unique pid. Variants of the same product should have the same pid."
                              },
                              "lid": {
                                "type": "string",
                                "description": "Each product should have a unique `lid` (i.e., line item identifier) for this purchase."
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "Product quantity"
                              },
                              "sku": {
                                "type": "string",
                                "description": "Product sku",
                                "nullable": true
                              },
                              "unit_price": {
                                "type": "number",
                                "description": "Product price",
                                "format": "float"
                              }
                            },
                            "required": [
                              "name",
                              "pid",
                              "lid",
                              "quantity",
                              "unit_price"
                            ]
                          }
                        }
                      },
                      "required": [
                        "email_address",
                        "transaction_id",
                        "currency",
                        "products"
                      ]
                    }
                  },
                  "required": [
                    "purchase"
                  ]
                },
                "example": {
                  "purchase": {
                    "email_address": "pru.magoo@convertkit.dev",
                    "transaction_id": "796-92-4892",
                    "status": "paid",
                    "subtotal": 78.66,
                    "tax": 7.87,
                    "shipping": 0,
                    "discount": 5.0,
                    "total": 81.53,
                    "currency": "USD",
                    "transaction_time": "2023-02-17T11:43:55Z",
                    "products": [
                      {
                        "name": "Phantom Hourglass",
                        "pid": "804-02-4430",
                        "lid": "811-75-7900",
                        "quantity": 1,
                        "unit_price": 23.22,
                        "sku": "SM21-SH-M02-RD-S-001"
                      },
                      {
                        "name": "Twilight Princess",
                        "pid": "833-51-1151",
                        "lid": "766-49-1241",
                        "quantity": 1,
                        "unit_price": 32.22,
                        "sku": "WT21-JK-M03-BK-L-012"
                      },
                      {
                        "name": "Four Swords",
                        "pid": "217-99-4325",
                        "lid": "563-95-8878",
                        "quantity": 1,
                        "unit_price": 23.22,
                        "sku": "FL21-TS-M01-BL-M-020"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/purchases/{id}": {
        "get": {
          "summary": "Get a purchase",
          "tags": [
            "Purchases"
          ],
          "security": [
            {
              "OAuth2": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 14
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the purchase details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "purchase": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "transaction_time": {
                            "type": "string"
                          },
                          "subtotal": {
                            "type": "number",
                            "format": "float"
                          },
                          "discount": {
                            "type": "number",
                            "format": "float"
                          },
                          "tax": {
                            "type": "number",
                            "format": "float"
                          },
                          "total": {
                            "type": "number",
                            "format": "float"
                          },
                          "products": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quantity": {
                                  "type": "integer"
                                },
                                "lid": {
                                  "type": "string"
                                },
                                "unit_price": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "sku": {
                                  "nullable": true
                                },
                                "name": {
                                  "type": "string"
                                },
                                "pid": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "quantity",
                                "lid",
                                "unit_price",
                                "sku",
                                "name",
                                "pid"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "transaction_id",
                          "status",
                          "email_address",
                          "currency",
                          "transaction_time",
                          "subtotal",
                          "discount",
                          "tax",
                          "total",
                          "products"
                        ]
                      }
                    },
                    "required": [
                      "purchase"
                    ]
                  },
                  "example": {
                    "purchase": {
                      "id": 13,
                      "transaction_id": "796-92-4892",
                      "status": "paid",
                      "email_address": "pru.magoo@convertkit.dev",
                      "currency": "USD",
                      "transaction_time": "2023-02-17T11:43:55Z",
                      "subtotal": 78.66,
                      "discount": 5.0,
                      "tax": 7.87,
                      "total": 81.53,
                      "products": [
                        {
                          "quantity": 1,
                          "lid": "811-75-7900",
                          "unit_price": 23.22,
                          "sku": null,
                          "name": "Phantom Hourglass",
                          "pid": "804-02-4430"
                        },
                        {
                          "quantity": 1,
                          "lid": "766-49-1241",
                          "unit_price": 32.22,
                          "sku": null,
                          "name": "Twilight Princess",
                          "pid": "833-51-1151"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/segments": {
        "get": {
          "summary": "List segments",
          "tags": [
            "Segments"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all segments for your account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "segments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "created_at"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "segments",
                      "pagination"
                    ]
                  },
                  "example": {
                    "segments": [
                      {
                        "id": 56,
                        "name": "Segment B",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 55,
                        "name": "Segment A",
                        "created_at": "2023-02-17T11:43:55Z"
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzU2XQ==",
                      "end_cursor": "WzU1XQ==",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/sequences": {
        "get": {
          "summary": "List sequences",
          "tags": [
            "Sequences"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all sequences for your account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "sequences": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "hold": {
                              "type": "boolean"
                            },
                            "repeat": {
                              "type": "boolean"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "hold",
                            "repeat",
                            "created_at"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "nullable": true,
                            "type": "string"
                          },
                          "end_cursor": {
                            "nullable": true,
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "sequences",
                      "pagination"
                    ]
                  },
                  "example": {
                    "sequences": [
                      {
                        "id": 3,
                        "name": "Evergreen sequence",
                        "hold": false,
                        "repeat": false,
                        "created_at": "2023-02-17T11:43:55Z"
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzNd",
                      "end_cursor": "WzNd",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/sequences/{sequence_id}/subscribers": {
        "get": {
          "summary": "List subscribers for a sequence",
          "tags": [
            "Sequences"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "added_after",
              "in": "query",
              "description": "Filter subscribers who have been added to the sequence after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-14T11:43:55Z"
            },
            {
              "name": "added_before",
              "in": "query",
              "description": "Filter subscribers who have been added to the sequence before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-18T11:43:55Z"
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "created_after",
              "in": "query",
              "description": "Filter subscribers who have been created after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-01-17T11:43:55Z"
            },
            {
              "name": "created_before",
              "in": "query",
              "description": "Filter subscribers who have been created before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-18T11:43:55Z"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "sequence_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 26
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter subscribers who have this status (`active`, `inactive`, `bounced`, `complained`, `cancelled` or `all`). Defaults to `active`.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "all"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of subscribers for the specified sequence",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "first_name": {
                              "nullable": true
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "added_at": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "category": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "category"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "email_address",
                            "state",
                            "created_at",
                            "added_at",
                            "fields"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "subscribers",
                      "pagination"
                    ]
                  },
                  "example": {
                    "subscribers": [
                      {
                        "id": 724,
                        "first_name": null,
                        "email_address": "subscriber427@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": "One"
                        }
                      },
                      {
                        "id": 723,
                        "first_name": null,
                        "email_address": "subscriber426@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": null
                        }
                      },
                      {
                        "id": 722,
                        "first_name": null,
                        "email_address": "subscriber425@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "added_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": null
                        }
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzcyNF0=",
                      "end_cursor": "WzcyMl0=",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Add subscriber to sequence by email address",
          "description": "The subscriber being added to the sequence must already exist. Subscribers can be created using the \"[Create a subscriber](#create-a-subscriber)\" endpoint.",
          "tags": [
            "Sequences"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "sequence_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 83
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a 200 when the subscriber has already been added to the sequence",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 820,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Adds the subscriber to the sequence",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 821,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when a sequence is inactive",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Sequence is inactive"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email_address"
                  ]
                },
                "example": {
                  "email_address": "alice@convertkit.dev"
                }
              }
            }
          }
        }
      },
      "/v4/sequences/{sequence_id}/subscribers/{id}": {
        "post": {
          "summary": "Add subscriber to sequence",
          "description": "The subscriber being added to the sequence must already exist. Subscribers can be created using the \"[Create a subscriber](#create-a-subscriber)\" endpoint.",
          "tags": [
            "Sequences"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 804
            },
            {
              "name": "sequence_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 62
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a 200 when the subscriber has already been added to the sequence",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 800,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Adds the subscriber to the sequence",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "added_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 801,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "added_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            }
          }
        }
      },
      "/v4/subscribers": {
        "get": {
          "summary": "List subscribers",
          "tags": [
            "Subscribers"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "created_after",
              "in": "query",
              "description": "Filter subscribers who have been created after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "2023-01-17T11:43:55Z"
            },
            {
              "name": "created_before",
              "in": "query",
              "description": "Filter subscribers who have been created before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "2023-02-18T11:43:55Z"
            },
            {
              "name": "email_address",
              "in": "query",
              "description": "Search subscribers by email address. This is an exact match search.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "alice@convertkit.dev"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            },
            {
              "name": "sort_field",
              "in": "query",
              "description": "Field to sort by (`id`, `updated_at`, `cancelled_at`). Defaults to `id`.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "cancelled_at"
            },
            {
              "name": "sort_order",
              "in": "query",
              "description": "Sort order for results (`asc` or `desc`). Defaults to `desc`.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "asc"
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter subscribers who have this status (`active`, `inactive`, `bounced`, `complained`, `cancelled` or `all`). Defaults to `active`.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "bounced"
            },
            {
              "name": "updated_after",
              "in": "query",
              "description": "Filter subscribers who have been updated after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "2023-01-17T11:43:55Z"
            },
            {
              "name": "updated_before",
              "in": "query",
              "description": "Filter subscribers who have been updated before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "2023-02-18T11:43:55Z"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a list of subscribers matching the sort and filter params, defaulting to active subscribers sorted in descending order by id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "category": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "category"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "email_address",
                            "state",
                            "created_at",
                            "fields"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "end_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "subscribers",
                      "pagination"
                    ]
                  },
                  "example": {
                    "subscribers": [
                      {
                        "id": 147,
                        "first_name": "Alice",
                        "email_address": "alice@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-01-27T11:43:55Z",
                        "fields": {
                          "category": "One"
                        }
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzE0N10=",
                      "end_cursor": "WzE0N10=",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "raises an error when sorting on cancelled_at without the cancelled status",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The status param must be `cancelled` if sort_field is `cancelled_at`"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a subscriber",
          "description": "Behaves as an upsert. If a subscriber with the provided email address does not exist, it creates one with the specified first name and state. If a subscriber with the provided email address already exists, it updates the first name.<br/><br/>We will ignore custom fields that don't already exist in your account. We will not return an error if you try to add data to a custom field that does not exist. Please use <a href=\"#create-a-custom-field\">Create a custom field</a> to create custom fields before setting for subscribers.<br/><br/><strong>NOTE:</strong> Updating the subscriber state with this endpoint is not supported at this time.<br/><strong>NOTE:</strong> We support creating/updating a maximum of 140 custom fields at a time.",
          "tags": [
            "Subscribers"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a 200 and updates the subscriber first name when a subscriber with provided email already exists",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 265,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "inactive",
                      "created_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Creates a new subscriber",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 263,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "202": {
              "description": "Returns a 202 and asynchronously adds custom fields for the new subscriber when more than 10 custom fields are included in the request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 264,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when one or more of the parameters are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Email address is invalid"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "nullable": true
                    },
                    "email_address": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "nullable": true,
                      "description": "Create subscriber in this state (`active`, `bounced`, `cancelled`, `complained` or  `inactive`). Defaults to `active`."
                    },
                    "fields": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "Last name": {
                          "type": "string"
                        },
                        "Birthday": {
                          "type": "string"
                        },
                        "Source": {
                          "type": "string"
                        },
                        "Role": {
                          "type": "string"
                        },
                        "Company": {
                          "type": "string"
                        },
                        "Postal code": {
                          "type": "string"
                        },
                        "Website": {
                          "type": "string"
                        },
                        "Social media": {
                          "type": "string"
                        },
                        "How did you hear about us?": {
                          "type": "string"
                        },
                        "Interests": {
                          "type": "string"
                        },
                        "Coupon": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Last name",
                        "Birthday",
                        "Source"
                      ]
                    }
                  },
                  "required": [
                    "email_address"
                  ]
                },
                "example": {
                  "first_name": "Alice",
                  "email_address": "alice@convertkit.dev",
                  "state": "active",
                  "fields": {
                    "Last name": "Lamarr",
                    "Birthday": "Feb 17",
                    "Source": "landing page",
                    "Role": "Software developer",
                    "Company": "Convertkit",
                    "Postal code": "83702",
                    "Website": "convertkit.com",
                    "Social media": "https://www.linkedin.com/company/convertkit",
                    "How did you hear about us?": "Social media",
                    "Interests": "Monetization",
                    "Coupon": ""
                  }
                }
              }
            }
          }
        }
      },
      "/v4/subscribers/{id}": {
        "get": {
          "summary": "Get a subscriber",
          "tags": [
            "Subscribers"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 241
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the subscriber details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {
                              "category": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "category"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 240,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "fields": {
                        "category": "One"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a subscriber",
          "description": "We will ignore custom fields that don't already exist in your account. We will not return an error if you try to add data to a custom field that does not exist. Please use <a href=\"#create-a-custom-field\">Create a custom field</a> to create custom fields before setting for subscribers.<br/><br/><strong>NOTE: </strong>We support creating/updating a maximum of 140 custom fields at a time.",
          "tags": [
            "Subscribers"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 288
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the subscriber's email address and first name",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 284,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "202": {
              "description": "Returns a 202 and asynchronously updates custom fields for the subscriber when more than 10 custom fields are included in the request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 285,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns 422 with an error when email address is already in use",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Email address has already been taken"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "nullable": true
                    },
                    "email_address": {
                      "type": "string"
                    },
                    "fields": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "Last name": {
                          "type": "string"
                        },
                        "Birthday": {
                          "type": "string"
                        },
                        "Source": {
                          "type": "string"
                        },
                        "Role": {
                          "type": "string"
                        },
                        "Company": {
                          "type": "string"
                        },
                        "Postal code": {
                          "type": "string"
                        },
                        "Website": {
                          "type": "string"
                        },
                        "Social media": {
                          "type": "string"
                        },
                        "How did you hear about us?": {
                          "type": "string"
                        },
                        "Interests": {
                          "type": "string"
                        },
                        "Coupon": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Last name",
                        "Birthday",
                        "Source"
                      ]
                    }
                  },
                  "required": [
                    "email_address"
                  ]
                },
                "example": {
                  "first_name": "Alice",
                  "email_address": "alice@convertkit.dev",
                  "fields": {
                    "Last name": "Lamarr",
                    "Birthday": "Feb 17",
                    "Source": "landing page",
                    "Role": "Software developer",
                    "Company": "Convertkit",
                    "Postal code": "83702",
                    "Website": "convertkit.com",
                    "Social media": "https://www.linkedin.com/company/convertkit",
                    "How did you hear about us?": "Social media",
                    "Interests": "Monetization",
                    "Coupon": ""
                  }
                }
              }
            }
          }
        }
      },
      "/v4/subscribers/{id}/unsubscribe": {
        "post": {
          "summary": "Unsubscribe subscriber",
          "tags": [
            "Subscribers"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 258
            }
          ],
          "responses": {
            "204": {
              "description": "Unsubscribes the subscriber",
              "content": {
                "": {
                  "schema": {
                    "type": "string"
                  },
                  "example": ""
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            }
          }
        }
      },
      "/v4/subscribers/{subscriber_id}/tags": {
        "get": {
          "summary": "List tags for a subscriber",
          "tags": [
            "Subscribers"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              }
            },
            {
              "name": "subscriber_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 848
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all tags for a subscriber",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "added_at": {
                              "type": "string"
                            },
                            "tagged_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "tags"
                    ]
                  },
                  "example": {
                    "tags": [
                      {
                        "id": 92,
                        "name": "Tag B",
                        "tagged_at": "2023-02-17T10:43:55Z"
                      },
                      {
                        "id": 93,
                        "name": "Tag A",
                        "tagged_at": "2023-02-17T10:43:55Z"
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzZd",
                      "end_cursor": "WzVd",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/v4/tags": {
        "get": {
          "summary": "List tags",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of all tags for your account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "created_at"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string"
                          },
                          "end_cursor": {
                            "type": "string"
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "tags",
                      "pagination"
                    ]
                  },
                  "example": {
                    "tags": [
                      {
                        "id": 5,
                        "name": "Tag B",
                        "created_at": "2023-02-17T11:43:55Z"
                      },
                      {
                        "id": 4,
                        "name": "Tag A",
                        "created_at": "2023-02-17T11:43:55Z"
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzVd",
                      "end_cursor": "WzRd",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a tag",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the tag if it already exists",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "created_at"
                        ]
                      }
                    },
                    "required": [
                      "tag"
                    ]
                  },
                  "example": {
                    "tag": {
                      "id": 12,
                      "name": "Completed",
                      "created_at": "2025-03-18T17:15:52Z"
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Creates the tag",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "created_at"
                        ]
                      }
                    },
                    "required": [
                      "tag"
                    ]
                  },
                  "example": {
                    "tag": {
                      "id": 11,
                      "name": "Completed",
                      "created_at": "2023-02-17T11:43:55Z"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 if a name is not provided",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Name can't be blank"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "example": {
                  "name": "Completed"
                }
              }
            }
          }
        }
      },
      "/v4/tags/{id}": {
        "put": {
          "summary": "Update tag name",
          "tags": [
            "Tags"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 30
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the tag name",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "created_at"
                        ]
                      }
                    },
                    "required": [
                      "tag"
                    ]
                  },
                  "example": {
                    "tag": {
                      "id": 28,
                      "name": "signed up",
                      "created_at": "2025-03-18T17:15:54Z"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when name is invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Name can't be blank"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "example": {
                  "name": "signed up"
                }
              }
            }
          },
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ]
        }
      },
      "/v4/tags/{tag_id}/subscribers": {
        "delete": {
          "summary": "Remove tag from subscriber by email address",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "tag_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 212
            }
          ],
          "responses": {
            "204": {
              "description": "Removes the tag from the subscriber",
              "content": {
                "": {
                  "schema": {
                    "type": "string"
                  },
                  "example": ""
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when missing email address",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Either subscriber id or email address is required to remove tag from subscriber"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email_address"
                  ]
                },
                "example": {
                  "email_address": "alice@convertkit.dev"
                }
              }
            }
          }
        },
        "get": {
          "summary": "List subscribers for a tag",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "created_after",
              "in": "query",
              "description": "Filter subscribers who have been created after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-01-17T11:43:55Z"
            },
            {
              "name": "created_before",
              "in": "query",
              "description": "Filter subscribers who have been created before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-18T11:43:55Z"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filter subscribers who have this status (`active`, `inactive`, `bounced`, `complained`, `cancelled` or `all`). Defaults to `active`.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "all"
            },
            {
              "name": "tag_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 118
            },
            {
              "name": "tagged_after",
              "in": "query",
              "description": "Filter subscribers who have been tagged after this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-14T11:43:55Z"
            },
            {
              "name": "tagged_before",
              "in": "query",
              "description": "Filter subscribers who have been tagged before this date (format yyyy-mm-dd)",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "2023-02-18T11:43:55Z"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of subscribers for the specified tag",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "first_name": {
                              "nullable": true
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "tagged_at": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "category": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "category"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "email_address",
                            "state",
                            "created_at",
                            "tagged_at",
                            "fields"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "end_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "subscribers",
                      "pagination"
                    ]
                  },
                  "example": {
                    "subscribers": [
                      {
                        "id": 851,
                        "first_name": null,
                        "email_address": "subscriber491@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "tagged_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": "One"
                        }
                      },
                      {
                        "id": 850,
                        "first_name": null,
                        "email_address": "subscriber490@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "tagged_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": null
                        }
                      },
                      {
                        "id": 849,
                        "first_name": null,
                        "email_address": "subscriber489@convertkit.dev",
                        "state": "active",
                        "created_at": "2023-02-17T11:43:55Z",
                        "tagged_at": "2023-02-17T11:43:55Z",
                        "fields": {
                          "category": null
                        }
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WyIyMDIzLTAyLTE3VDExOjQzOjU1LjAwMFoiLDExXQ==",
                      "end_cursor": "WyIyMDIzLTAyLTE3VDExOjQzOjU1LjAwMFoiLDld",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Tag a subscriber by email address",
          "description": "The subscriber being tagged must already exist. Subscribers can be created using the \"[Create a subscriber](#create-a-subscriber)\" endpoint.",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "tag_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 173
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a 200 when the subscriber already has the tag",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "tagged_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "tagged_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 945,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "tagged_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Tags the subscriber",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "tagged_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "tagged_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 946,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "tagged_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns a 422 with an error message when missing email address",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Either subscriber id or email address is required to tag subscriber"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email_address"
                  ]
                },
                "example": {
                  "email_address": "alice@convertkit.dev"
                }
              }
            }
          }
        }
      },
      "/v4/tags/{tag_id}/subscribers/{id}": {
        "delete": {
          "summary": "Remove tag from subscriber",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 968
            },
            {
              "name": "tag_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 192
            }
          ],
          "responses": {
            "204": {
              "description": "Removes the tag from the subscriber",
              "content": {
                "": {
                  "schema": {
                    "type": "string"
                  },
                  "example": ""
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            }
          }
        },
        "post": {
          "summary": "Tag a subscriber",
          "description": "The subscriber being tagged must already exist. Subscribers can be created using the \"[Create a subscriber](#create-a-subscriber)\" endpoint.",
          "tags": [
            "Tags"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 929
            },
            {
              "name": "tag_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 152
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a 200 when the subscriber already has the tag",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "tagged_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "tagged_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 927,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "tagged_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "201": {
              "description": "Tags the subscriber",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "subscriber": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "tagged_at": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "email_address",
                          "state",
                          "created_at",
                          "tagged_at",
                          "fields"
                        ]
                      }
                    },
                    "required": [
                      "subscriber"
                    ]
                  },
                  "example": {
                    "subscriber": {
                      "id": 928,
                      "first_name": "Alice",
                      "email_address": "alice@convertkit.dev",
                      "state": "active",
                      "created_at": "2023-02-17T11:43:55Z",
                      "tagged_at": "2023-02-17T11:43:55Z",
                      "fields": {}
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            }
          }
        }
      },
      "/v4/webhooks": {
        "get": {
          "summary": "List webhooks",
          "description": "Webhooks are automations that will receive subscriber data when a subscriber event is triggered, such as when a subscriber completes a sequence.<br/><br/>When a webhook is triggered, a `POST` request will be made to your URL with a JSON payload.",
          "tags": [
            "Webhooks"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "after",
              "description": "To fetch next page of results, use `?after=<end_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzFd"
            },
            {
              "name": "before",
              "description": "To fetch previous page of results, use `?before=<start_cursor>`",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": "WzNd"
            },
            {
              "name": "include_total_count",
              "description": "To include the total count of records in the response, use `true`. For large collections, expect a slightly slower response.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "false"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default 500, maximum 1000.",
              "in": "query",
              "required": false,
              "schema": {
                "nullable": true
              },
              "example": 10
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a paginated list of webhooks",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "webhooks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "account_id": {
                              "type": "integer"
                            },
                            "event": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "tag_id": {
                                  "type": "integer"
                                },
                                "form_id": {
                                  "type": "integer"
                                },
                                "sequence_id": {
                                  "type": "integer"
                                },
                                "product_id": {
                                  "type": "integer"
                                },
                                "initiator_value": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "target_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "account_id",
                            "event",
                            "target_url"
                          ]
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "has_previous_page": {
                            "type": "boolean"
                          },
                          "has_next_page": {
                            "type": "boolean"
                          },
                          "start_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "end_cursor": {
                            "type": "string",
                            "nullable": true
                          },
                          "per_page": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "has_previous_page",
                          "has_next_page",
                          "start_cursor",
                          "end_cursor",
                          "per_page"
                        ]
                      }
                    },
                    "required": [
                      "webhooks",
                      "pagination"
                    ]
                  },
                  "example": {
                    "webhooks": [
                      {
                        "id": 2,
                        "account_id": 1040,
                        "event": {
                          "name": "tag_add",
                          "tag_id": 34
                        },
                        "target_url": "http://example.convertkit.dev/tags"
                      },
                      {
                        "id": 1,
                        "account_id": 1040,
                        "event": {
                          "name": "form_subscribe",
                          "form_id": 10
                        },
                        "target_url": "http://example.convertkit.dev/"
                      }
                    ],
                    "pagination": {
                      "has_previous_page": false,
                      "has_next_page": false,
                      "start_cursor": "WzJd",
                      "end_cursor": "WzFd",
                      "per_page": 500
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a webhook",
          "description": "Available event types:<br/>- `subscriber.subscriber_activate`<br/>- `subscriber.subscriber_unsubscribe`<br/>- `subscriber.subscriber_bounce`<br/>- `subscriber.subscriber_complain`<br/>- `subscriber.form_subscribe`, required parameter `form_id` [Integer]<br/>- `subscriber.course_subscribe`, required parameter `sequence_id` [Integer]<br/>- `subscriber.course_complete`, required parameter `sequence_id` [Integer]<br/>- `subscriber.link_click`, required parameter `initiator_value` [String] as a link URL<br/>- `subscriber.product_purchase`, required parameter `product_id` [Integer]<br/>- `subscriber.tag_add`, required parameter `tag_id` [Integer]<br/>- `subscriber.tag_remove`, required parameter `tag_id` [Integer]<br/>- `purchase.purchase_create`",
          "tags": [
            "Webhooks"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            }
          ],
          "responses": {
            "201": {
              "description": "Creates the webhook",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "webhook": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "account_id": {
                            "type": "integer"
                          },
                          "event": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "initiator_value": {
                                "nullable": true
                              }
                            },
                            "required": [
                              "name",
                              "initiator_value"
                            ]
                          },
                          "target_url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "account_id",
                          "event",
                          "target_url"
                        ]
                      }
                    },
                    "required": [
                      "webhook"
                    ]
                  },
                  "example": {
                    "webhook": {
                      "id": 9,
                      "account_id": 1065,
                      "event": {
                        "name": "subscriber_activate",
                        "initiator_value": null
                      },
                      "target_url": "https://example.convertkit.dev/"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "Returns an error when missing required params",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "`event` and `target` parameters must be provided"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "target_url": {
                      "type": "string"
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The event type. Must be one of the available event types listed above."
                        },
                        "form_id": {
                          "nullable": true
                        },
                        "tag_id": {
                          "nullable": true
                        },
                        "product_id": {
                          "nullable": true
                        },
                        "initiator_value": {
                          "nullable": true
                        },
                        "sequence_id": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "target_url",
                    "event"
                  ]
                },
                "example": {
                  "target_url": "https://example.convertkit.dev/",
                  "event": {
                    "name": "subscriber.subscriber_activate",
                    "form_id": null,
                    "tag_id": null,
                    "product_id": null,
                    "initiator_value": null,
                    "sequence_id": null
                  }
                }
              }
            }
          }
        }
      },
      "/v4/webhooks/{id}": {
        "delete": {
          "summary": "Delete a webhook",
          "tags": [
            "Webhooks"
          ],
          "security": [
            {
              "OAuth2": []
            },
            {
              "API Key": []
            }
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              },
              "example": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "example": 28
            }
          ],
          "responses": {
            "204": {
              "description": "Deletes the webhook",
              "content": {
                "": {
                  "schema": {
                    "type": "string"
                  },
                  "example": ""
                }
              }
            },
            "401": {
              "description": "Returns a 401 if the token and/or account cannot be authenticated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "The access token is invalid"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Returns a 404 when the provided id does not exist",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "errors"
                    ]
                  },
                  "example": {
                    "errors": [
                      "Not Found"
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "OAuth2": {
          "description": "Authenticate API requests via an OAuth token",
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.kit.com/oauth/authorize",
              "tokenUrl": "https://app.kit.com/oauth/token",
              "refreshUrl": "https://app.kit.com/oauth/token",
              "scopes": {
                "read": "Read access to the API",
                "write": "Write access to the API"
              }
            }
          }
        },
        "API Key": {
          "description": "Authenticate API requests via an API Key",
          "type": "apiKey",
          "in": "header",
          "name": "X-Kit-Api-Key"
        }
      }
    }
  }